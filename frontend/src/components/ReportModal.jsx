import { useState } from "react";
import axios from "axios";
import "../styles/ReportModal.css";

const ReportModal = ({ onClose }) => {
  const [section, setSection] = useState("students");
  const [startDate, setStartDate] = useState("");
  const [endDate, setEndDate] = useState("");
  const [format, setFormat] = useState("excel");

  const handleGenerateReport = async () => {
    if (!startDate || !endDate) {
      alert("‚ö†Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥!");
      return;
    }

    try {
      const response = await axios.get(`${import.meta.env.VITE_API_BASE_URL}/reports/${section}`, {
        params: { startDate, endDate, format },
        responseType: format === "excel" ? "blob" : "json"
      });      

      if (format === "excel") {
        const url = window.URL.createObjectURL(new Blob([response.data]));
        const link = document.createElement("a");
        link.href = url;
        link.setAttribute("download", `${section}_report.xlsx`);
        document.body.appendChild(link);
        link.click();
      } else {
        console.log("üìä –î–∞–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç–∞:", response.data);
      }

      onClose();
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞:", error);
      alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ—Ç—á–µ—Ç–∞!");
    }
  };

  return (
    <div className="modal-overlay">
      <div className="modal-content">
        <div className="modal-header">
          <span>üìä –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á–µ—Ç</span>
          <span className="close-icon" onClick={onClose}>√ó</span>
        </div>

        <label>–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:</label>
        <select value={section} onChange={(e) => setSection(e.target.value)}>
          <option value="courses">–ö—É—Ä—Å—ã</option>
          <option value="teachers">–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏</option>
          <option value="students">–°—Ç—É–¥–µ–Ω—Ç—ã</option>
          <option value="events">–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è</option>
          <option value="leads">–õ–∏–¥—ã</option>
          <option value="rooms">–ö–æ–º–Ω–∞—Ç—ã</option>
        </select>

        <label>–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥:</label>
        <div className="date-range">
          <input type="date" value={startDate} onChange={(e) => setStartDate(e.target.value)} />
          <input type="date" value={endDate} onChange={(e) => setEndDate(e.target.value)} />
        </div>

        <label>–§–æ—Ä–º–∞—Ç:</label>
        <select value={format} onChange={(e) => setFormat(e.target.value)}>
          <option value="excel">Excel</option>
          <option value="html">HTML</option>
        </select>

        <button onClick={handleGenerateReport}>üì• –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å</button>
      </div>
    </div>
  );
};

export default ReportModal;
